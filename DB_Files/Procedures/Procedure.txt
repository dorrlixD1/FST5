/*********************************************************************
/** Procedure: sp_Insert_ErrorLogEntry
/** Developer: Dorr
/** Description: Erstellt einen Eintrag im Errorlog.
/**
/**********************************************************************/
CREATE or REPLACE
PROCEDURE sp_Insert_ErrorLogEntry (l_v_tablename in varchar, l_v_errorMessage in varchar)
IS
	
	-- locals
	l_n_nextID number;

BEGIN

		l_n_nextID := f_nextID_n('ERRORLOG'); 
		INSERT INTO ERRORLOG(Id, entity, date_of_occ, errorMessage) values (l_n_nextID, l_v_tablename ,sysdate, l_v_errorMessage );
		COMMIT;

END;
/

/*********************************************************************/
/**
/** Procedure:  sp_INSERT_LIEGREC
/** Out: 
/** In: 
/** In: 
/** Developer: Dorr, Bauer
/** Description:
/**
/*********************************************************************/

CREATE OR REPLACE 
PROCEDURE sp_INSERT_LIEGREC (l_n_KG_Code_i in number, l_v_Katastralgemeinde_i in varchar, l_n_EZ_i in number, l_n_PLZ_Code_i in number,
l_v_straße_i in varchar, l_v_Orientierungsnummer_in in varchar, l_v_Grundstuecksnummer_i in varchar, l_n_Grundstuecksflaeche_i in number, 
l_v_ErwArt_i in varchar, l_d_ErwDatum_i in date, l_v_Widmung_i in varchar, l_n_Schutzzone_i in number, l_n_Wohnzone_i in number, l_n_OEZ_i in number,
l_n_Bausperre_i in number, l_d_BausperreBis_i in date, l_v_Zuordnung_i in varchar, l_n_Geschoße_i in number, l_n_parzelliert_i in number, 
l_d_Baujahr_i in number, l_v_Tagebuchzahl_i in varchar, l_n_Kaufpreis_i in decimal,  
l_n_Baureifgest_i in number, l_n_Baurecht_i in number)

AS

	-- Constants
	n_TRUE number := 1;
	n_AKTIV number := 1;
	n_INAKTIV number := 0;

	-- Exceptions
	x_parameter_fehler exception;
	x_parameter_fehler_null exception;
	x_insert_err_KG	exception;
	x_insert_err_ErwArt	exception;
	x_insert_err_Zuordnung	exception;
	x_insert_err_Widmung exception;
	x_insert_err_Adresse exception;

	-- Locals
	n_propCounter number;
	n_erwArtID number;
	n_widmungID number;
	n_adresseID number;
	n_zuordnungID number;
	n_propertyID number;
	n_ErrorLogID number;
	n_BOL_Aktiv	number := 0;
	
Begin

-- Variable Check

		-- Prüfung auf NULL
	if l_v_Katastralgemeinde_i							  IS NULL
		OR l_v_Zuordnung_i											IS NULL
		OR l_v_Tagebuchzahl_i										IS NULL
		OR l_n_Kaufpreis_i											IS NULL
		OR l_n_KG_Code_i												IS NULL
		OR l_n_EZ_i															IS NULL
		OR l_n_PLZ_Code_i 											IS NULL
		OR l_n_Grundstuecksflaeche_i						IS NULL
		OR l_n_Bausperre_i											IS NULL
		OR l_v_Widmung_i												IS NULL
		OR l_n_Schutzzone_i											IS NULL
		OR l_n_Wohnzone_i												IS NULL
		OR l_n_OEZ_i														IS NULL
		OR l_n_parzelliert_i										IS NULL
		OR l_n_Baureifgest_i										IS NULL
		OR l_n_Baurecht_i												IS NULL
		OR l_v_Tagebuchzahl_i										IS NULL THEN
			RAISE x_parameter_fehler_null;
	END IF;	
		

	-- Logical Parameter Check
	if LENGTH(l_n_KG_Code_i) 									!= 4 
		OR LENGTH(l_v_Katastralgemeinde_i) 			> 50
		OR LENGTH(l_n_PLZ_Code_i) 							!=  4
		OR LENGTH(l_v_Grundstuecksnummer_i) 		> 10
		OR f_checkBoolean_n(l_n_Schutzzone_i) 	!= n_TRUE
		OR f_checkBoolean_n(l_n_Wohnzone_i) 		!= n_TRUE
		OR f_checkBoolean_n(l_n_OEZ_i) 					!= n_TRUE
		OR f_checkBoolean_n(l_n_Bausperre_i) 		!= n_TRUE
		OR f_checkBoolean_n(l_n_parzelliert_i)  != n_TRUE
		OR f_checkBoolean_n(l_n_Baureifgest_i)  != n_TRUE
		OR f_checkBoolean_n(l_n_Baurecht_i)     != n_TRUE	THEN
		RAISE x_parameter_fehler;
	END IF;

-- Check if the Property is already existing, if yes then add history

	select Count(l.Id) INTO n_propCounter FROM Liegenschaft l
	join Adresse a on a.id = l.adresse_Id
		where l.EZ			 = l_n_EZ_i 
		AND l.GSTNR 		 = l_v_Grundstuecksnummer_i
		AND a.KG_Code    = l_n_KG_Code_i
		AND l.ErwDatum   > l_d_ErwDatum_i;
	
  -- Wenn der Zähler größer 1 ist, dann wird der Datensatz im Zugriff auf inaktiv gesetzt
	if n_propCounter > 0 then	
		
		n_BOL_Aktiv := n_INAKTIV;

	else	
			
		UPDATE (select * FROM Liegenschaft l 
						join Adresse a on a.id = l.adresse_Id 
						where l.EZ = l_n_EZ_i 
						AND a.KG_Code = l_n_KG_Code_i 
						AND l.GSTNR = l_v_Grundstuecksnummer_i 
						AND l.BOL_AKTIV = n_AKTIV)
		SET BOL_AKTIV = n_INAKTIV;
		
		n_BOL_Aktiv := n_AKTIV;
			
	end if;

	
-- Insert of the values

	-- Insert new rec or fetch existing ID Table : ErwArt
	n_erwArtID := f_Insert_ErwArt (l_v_ErwArt_i);
	
	if n_erwArtID = 0 THEN
		raise x_insert_err_ErwArt;
	end if;
	
	-- Insert new rec or fetch existing ID Table : Zuordnung
	n_zuordnungID := f_Insert_Zuordnung (l_v_Zuordnung_i);
	
	if n_zuordnungID = 0 then
		raise x_insert_err_Zuordnung;
	end if;
		
	-- Insert new rec or catch existing ID Table : Widmung
	n_widmungID := f_Insert_Widmung (l_v_Widmung_i);
	
	if n_widmungID = 0 then
		raise x_insert_err_Widmung;
	end if; 
	
	-- Insert new rec or fetch existing ID Table : KG (1 success, 0 failure)
	if f_Insert_KG(l_n_KG_Code_i, l_v_Katastralgemeinde_i , l_n_PLZ_Code_i) != n_TRUE THEN
		RAISE x_insert_err_KG;
	END IF;
	
	-- Insert new rec or fetch existing ID Table : Adresse
	n_adresseID := f_Insert_Adresse (l_n_KG_Code_i, l_v_straße_i, l_v_Orientierungsnummer_in);
	
	if n_adresseID = 0 then
		raise x_insert_err_Adresse;
	end if; 

-- Insert new Property
	n_propertyID := f_nextID_n('Liegenschaft');
	
	Insert into Liegenschaft(Id, Adresse_Id, GstNr, EZ, Geschosse, ErwArt_Id, ErwDatum, GstFl, Parzelliert, 
		Zuordnung_Id, Widmung_Id, Baujahr, Kaufpreis, Tagebuchzahl, Schutzzone, Wohnzone, oeZ, Bausperre, BausperreBis, BAUREIFGEST, Baurecht, BOL_AKTIV)
		values (n_propertyID,n_adresseID, UPPER(l_v_Grundstuecksnummer_i), l_n_EZ_i, l_n_Geschoße_i, n_erwArtID, l_d_ErwDatum_i, l_n_Grundstuecksflaeche_i,
		l_n_parzelliert_i, n_zuordnungID, n_widmungID, l_d_Baujahr_i, l_n_Kaufpreis_i, l_v_Tagebuchzahl_i, l_n_Schutzzone_i, l_n_Wohnzone_i, l_n_OEZ_i, l_n_Bausperre_i, l_d_BausperreBis_i,   
		l_n_Baureifgest_i,l_n_Baurecht_i, n_BOL_Aktiv ); 
		
	COMMIT;
	
-- Exception Handling
Exception

	When x_parameter_fehler_null THEN
	  sp_Insert_ErrorLogEntry('sp_INSERT_LIEGREC', 'ERR; PARAMETER FEHLER! Mindestens ein Parameterwert ist NULL!! Anlage der Liegenschaft, EZ: ' || l_n_EZ_i || 'Katastralgemeide: ' || l_n_KG_Code_i || ' ' || SQLCODE || ' ' || SQLERRM);
		RAISE_APPLICATION_ERROR(-20001, 'ERR; PARAMETER FEHLER! Mindestens ein Parameterwert ist NULL!');
		
	when x_parameter_fehler THEN
	  sp_Insert_ErrorLogEntry('sp_INSERT_LIEGREC', 'ERR; PARAMETER FEHLER! Datentyp oder definierte Parameterlänge nicht eingehalten!! Anlage der Liegenschaft, EZ: ' || l_n_EZ_i || 'Katastralgemeide: ' || l_n_KG_Code_i || ' ' || SQLCODE || ' ' || SQLERRM);
		RAISE_APPLICATION_ERROR(-20002, 'ERR; PARAMETER FEHLER! Datentyp oder definierte Parameterlänge nicht eingehalten!');
		
	When x_insert_err_KG THEN
		sp_Insert_ErrorLogEntry('sp_INSERT_LIEGREC', 'ERR; Bei Anlage des KG-Satzes! Anlage der Liegenschaft, EZ: ' || l_n_EZ_i || 'Katastralgemeide: ' || l_n_KG_Code_i || ' ' || SQLCODE || ' ' || SQLERRM); 
		RAISE_APPLICATION_ERROR(-20004, 'ERR; Bei Anlage des KG-Satzes!');
		
	when x_insert_err_ErwArt THEN
		sp_Insert_ErrorLogEntry('sp_INSERT_LIEGREC', 'ERR; Bei Anlage des ErwArt-Satzes! Anlage der Liegenschaft, EZ: ' || l_n_EZ_i || 'Katastralgemeide: ' || l_n_KG_Code_i || ' ' || SQLCODE || ' ' || SQLERRM); 
		RAISE_APPLICATION_ERROR(-20005, 'ERR; Bei Anlage des ErwArt-Satzes!');
		
	when x_insert_err_Zuordnung THEN
	  sp_Insert_ErrorLogEntry('sp_INSERT_LIEGREC', 'ERR; Bei Anlage des Zuordnungs-Satzes! Anlage der Liegenschaft, EZ: ' || l_n_EZ_i || 'Katastralgemeide: ' || l_n_KG_Code_i || ' ' || SQLCODE || ' ' || SQLERRM); 
		RAISE_APPLICATION_ERROR(-20006, 'ERR; Bei Anlage des Zuordnungs-Satzes!');
		
	when x_insert_err_Widmung ThEN
		sp_Insert_ErrorLogEntry('sp_INSERT_LIEGREC', 'ERR; Bei Anlage des Widmungs-Satzes! Anlage der Liegenschaft, EZ: ' || l_n_EZ_i || 'Katastralgemeide: ' || l_n_KG_Code_i || ' ' || SQLCODE || ' ' || SQLERRM);       
		RAISE_APPLICATION_ERROR(-20007, 'ERR; Bei Anlage des Widmungs-Satzes!');
		
	when x_insert_err_Adresse THEN
		sp_Insert_ErrorLogEntry('sp_INSERT_LIEGREC', 'ERR; Bei Anlage des Adresssatzes! Anlage der Liegenschaft, EZ: ' || l_n_EZ_i || 'Katastralgemeide: ' || l_n_KG_Code_i || ' ' || SQLCODE || ' ' || SQLERRM);
		RAISE_APPLICATION_ERROR(-20008, 'ERR; Bei Anlage des Adresssatzes!');
	
		
	When OTHERS THEN
		sp_Insert_ErrorLogEntry('sp_INSERT_LIEGREC', ' EZ: ' || l_n_EZ_i || 'Katastralgemeide:' || l_n_KG_Code_i || ' ' || SQLCODE || ' ' || SQLERRM);
		RAISE;
	
End;
/

set serveroutput on;

declare

begin
sp_INSERT_LIEGREC(1100, 'Neuklappersdorf' , 1002, 1030, 'La Viva Re Straße 45', '3a', '5665', 1000, 
'Kauf',  to_date('2023-04-29', 'YYYY-MM-DD'), 'WIGBFOGL', 0, 1, 0, 0, CURRENT_TIMESTAMP, 'Einfamilienhaus', 4, 0, 2012, '6037/59',2006100.45, 0, 0);

end;
/


/*********************************************************************/
/**
/** Procedure:  sp_READ_LIEG_HISTORY
/** Out: SYS-REFCURSOR
/** In:  KG_CODE, GstNr, EZ
/** Developer: Dorr, Bauer
/** Description:
/**
/*********************************************************************/

CREATE OR REPLACE 
PROCEDURE sp_READ_LIEG_HISTORY (l_n_KG_Code_i in number, l_v_Grundstuecksnummer_i in varchar, l_n_EZ_i in number, GET_LS_HISTORY OUT SYS_REFCURSOR)
AS


BEGIN

Open GET_LS_HISTORY FOR

SELECT l.ID, l.KAUFPREIS, e.ErwArt, l.ErwDatum, z.Zuordnung, w.WidmungLang FROM Liegenschaft l
	join ErwArt e on e.ID = l.ErwArt_Id
	join Zuordnung z on z.id = l.Zuordnung_Id
	join Widmung w on w.id = l.Widmung_ID
	join Adresse a on a.id = l.Adresse_Id
	WHERE a.KG_Code = l_n_KG_Code_i
		AND l.GstNr = l_v_Grundstuecksnummer_i
		AND l.EZ = l_n_EZ_i
		AND l.BOL_AKTIV = 0
		ORDEr BY l.ERWDATUM DESC;


END;
/

/*********************************************************************/
/**
/** Procedure:  sp_READ_LIEG_Details
/** Out: Lieg_Rec
/** In:  KG_CODE, GstNr, EZ
/** Developer: Dorr, Bauer
/** Description: Reading all Details of a Liegenschaft
/**
/*********************************************************************/

CREATE OR REPLACE 
PROCEDURE sp_READ_LIEG_HISTORY (l_n_Lieg_Id_i in number,  GET_LS_Details OUT SYS_REFCURSOR)
AS

BEGIN


Open GET_LS_Details FOR

SELECT * FROM Liegenschaft l
	join ErwArt e on e.ID = l.ErwArt_Id
	join Zuordnung z on z.id = l.Zuordnung_Id
	join Widmung w on w.id = l.Widmung_ID
	join Adresse a on a.id = l.Adresse_Id
	join KG k on k.KG_Code = a.KG_Code
	join PLZ p on p.plz_Code = k.PLZ_Code
	WHERE l.id = l_n_Lieg_Id_i;

END;
/